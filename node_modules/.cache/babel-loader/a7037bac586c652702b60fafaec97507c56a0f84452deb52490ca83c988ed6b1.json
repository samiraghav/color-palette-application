{"ast":null,"code":"const {\n  unpack,\n  type\n} = require('../../utils');\nconst chroma = require('../../chroma');\nconst Color = require('../../Color');\nconst input = require('../input');\nconst rgb2lch = require('./rgb2lch');\nColor.prototype.lch = function () {\n  return rgb2lch(this._rgb);\n};\nColor.prototype.hcl = function () {\n  return rgb2lch(this._rgb).reverse();\n};\nchroma.lch = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return new Color(...args, 'lch');\n};\nchroma.hcl = function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  return new Color(...args, 'hcl');\n};\ninput.format.lch = require('./lch2rgb');\ninput.format.hcl = require('./hcl2rgb');\n['lch', 'hcl'].forEach(m => input.autodetect.push({\n  p: 2,\n  test: function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    args = unpack(args, m);\n    if (type(args) === 'array' && args.length === 3) {\n      return m;\n    }\n  }\n}));","map":{"version":3,"names":["unpack","type","require","chroma","Color","input","rgb2lch","prototype","lch","_rgb","hcl","reverse","_len","arguments","length","args","Array","_key","_len2","_key2","format","forEach","m","autodetect","push","p","test","_len3","_key3"],"sources":["C:/Users/Sai/Desktop/REACT/youtube-extension/node_modules/chroma-js/src/io/lch/index.js"],"sourcesContent":["const {unpack, type} = require('../../utils');\nconst chroma = require('../../chroma');\nconst Color = require('../../Color');\nconst input = require('../input');\n\nconst rgb2lch = require('./rgb2lch');\n\nColor.prototype.lch = function() { return rgb2lch(this._rgb); };\nColor.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };\n\nchroma.lch = (...args) => new Color(...args, 'lch');\nchroma.hcl = (...args) => new Color(...args, 'hcl');\n\ninput.format.lch = require('./lch2rgb');\ninput.format.hcl = require('./hcl2rgb');\n\n['lch','hcl'].forEach(m => input.autodetect.push({\n    p: 2,\n    test: (...args) => {\n        args = unpack(args, m);\n        if (type(args) === 'array' && args.length === 3) {\n            return m;\n        }\n    }\n}));\n\n"],"mappings":"AAAA,MAAM;EAACA,MAAM;EAAEC;AAAI,CAAC,GAAGC,OAAO,CAAC,aAAa,CAAC;AAC7C,MAAMC,MAAM,GAAGD,OAAO,CAAC,cAAc,CAAC;AACtC,MAAME,KAAK,GAAGF,OAAO,CAAC,aAAa,CAAC;AACpC,MAAMG,KAAK,GAAGH,OAAO,CAAC,UAAU,CAAC;AAEjC,MAAMI,OAAO,GAAGJ,OAAO,CAAC,WAAW,CAAC;AAEpCE,KAAK,CAACG,SAAS,CAACC,GAAG,GAAG,YAAW;EAAE,OAAOF,OAAO,CAAC,IAAI,CAACG,IAAI,CAAC;AAAE,CAAC;AAC/DL,KAAK,CAACG,SAAS,CAACG,GAAG,GAAG,YAAW;EAAE,OAAOJ,OAAO,CAAC,IAAI,CAACG,IAAI,CAAC,CAACE,OAAO,EAAE;AAAE,CAAC;AAEzER,MAAM,CAACK,GAAG,GAAG;EAAA,SAAAI,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAIC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAAA,OAAK,IAAIb,KAAK,CAAC,GAAGW,IAAI,EAAE,KAAK,CAAC;AAAA;AACnDZ,MAAM,CAACO,GAAG,GAAG;EAAA,SAAAQ,KAAA,GAAAL,SAAA,CAAAC,MAAA,EAAIC,IAAI,OAAAC,KAAA,CAAAE,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;IAAJJ,IAAI,CAAAI,KAAA,IAAAN,SAAA,CAAAM,KAAA;EAAA;EAAA,OAAK,IAAIf,KAAK,CAAC,GAAGW,IAAI,EAAE,KAAK,CAAC;AAAA;AAEnDV,KAAK,CAACe,MAAM,CAACZ,GAAG,GAAGN,OAAO,CAAC,WAAW,CAAC;AACvCG,KAAK,CAACe,MAAM,CAACV,GAAG,GAAGR,OAAO,CAAC,WAAW,CAAC;AAEvC,CAAC,KAAK,EAAC,KAAK,CAAC,CAACmB,OAAO,CAACC,CAAC,IAAIjB,KAAK,CAACkB,UAAU,CAACC,IAAI,CAAC;EAC7CC,CAAC,EAAE,CAAC;EACJC,IAAI,EAAE,SAAAA,CAAA,EAAa;IAAA,SAAAC,KAAA,GAAAd,SAAA,CAAAC,MAAA,EAATC,IAAI,OAAAC,KAAA,CAAAW,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAJb,IAAI,CAAAa,KAAA,IAAAf,SAAA,CAAAe,KAAA;IAAA;IACVb,IAAI,GAAGf,MAAM,CAACe,IAAI,EAAEO,CAAC,CAAC;IACtB,IAAIrB,IAAI,CAACc,IAAI,CAAC,KAAK,OAAO,IAAIA,IAAI,CAACD,MAAM,KAAK,CAAC,EAAE;MAC7C,OAAOQ,CAAC;IACZ;EACJ;AACJ,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}