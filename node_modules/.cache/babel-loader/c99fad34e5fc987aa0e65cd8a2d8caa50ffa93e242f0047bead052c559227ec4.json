{"ast":null,"code":"const Color = require('../Color');\nconst {\n  type\n} = require('../utils');\nconst {\n  pow\n} = Math;\nconst EPS = 1e-7;\nconst MAX_ITER = 20;\nColor.prototype.luminance = function (lum) {\n  if (lum !== undefined && type(lum) === 'number') {\n    if (lum === 0) {\n      // return pure black\n      return new Color([0, 0, 0, this._rgb[3]], 'rgb');\n    }\n    if (lum === 1) {\n      // return pure white\n      return new Color([255, 255, 255, this._rgb[3]], 'rgb');\n    }\n    // compute new color using...\n    let cur_lum = this.luminance();\n    let mode = 'rgb';\n    let max_iter = MAX_ITER;\n    const test = (low, high) => {\n      const mid = low.interpolate(high, 0.5, mode);\n      const lm = mid.luminance();\n      if (Math.abs(lum - lm) < EPS || !max_iter--) {\n        // close enough\n        return mid;\n      }\n      return lm > lum ? test(low, mid) : test(mid, high);\n    };\n    const rgb = (cur_lum > lum ? test(new Color([0, 0, 0]), this) : test(this, new Color([255, 255, 255]))).rgb();\n    return new Color([...rgb, this._rgb[3]]);\n  }\n  return rgb2luminance(...this._rgb.slice(0, 3));\n};\nconst rgb2luminance = (r, g, b) => {\n  // relative luminance\n  // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n  r = luminance_x(r);\n  g = luminance_x(g);\n  b = luminance_x(b);\n  return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n};\nconst luminance_x = x => {\n  x /= 255;\n  return x <= 0.03928 ? x / 12.92 : pow((x + 0.055) / 1.055, 2.4);\n};","map":{"version":3,"names":["Color","require","type","pow","Math","EPS","MAX_ITER","prototype","luminance","lum","undefined","_rgb","cur_lum","mode","max_iter","test","low","high","mid","interpolate","lm","abs","rgb","rgb2luminance","slice","r","g","b","luminance_x","x"],"sources":["C:/Users/Sai/Desktop/REACT/youtube-extension/node_modules/chroma-js/src/ops/luminance.js"],"sourcesContent":["const Color = require('../Color');\nconst {type} = require('../utils');\nconst {pow} = Math;\n\nconst EPS = 1e-7;\nconst MAX_ITER = 20;\n\nColor.prototype.luminance = function(lum) {\n    if (lum !== undefined && type(lum) === 'number') {\n        if (lum === 0) {\n            // return pure black\n            return new Color([0,0,0,this._rgb[3]], 'rgb');\n        }\n        if (lum === 1) {\n            // return pure white\n            return new Color([255,255,255,this._rgb[3]], 'rgb');\n        }\n        // compute new color using...\n        let cur_lum = this.luminance();\n        let mode = 'rgb';\n        let max_iter = MAX_ITER;\n\n        const test = (low, high) => {\n            const mid = low.interpolate(high, 0.5, mode);\n            const lm = mid.luminance();\n            if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                // close enough\n                return mid;\n            }\n            return lm > lum ? test(low, mid) : test(mid, high);\n        }\n\n        const rgb = (cur_lum > lum ? test(new Color([0,0,0]), this) : test(this, new Color([255,255,255]))).rgb();\n        return new Color([...rgb,this._rgb[3]]);\n    }\n    return rgb2luminance(...(this._rgb).slice(0,3));\n}\n\n\nconst rgb2luminance = (r,g,b) => {\n    // relative luminance\n    // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n}\n\nconst luminance_x = (x) => {\n    x /= 255;\n    return x <= 0.03928 ? x/12.92 : pow((x+0.055)/1.055, 2.4);\n}\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,UAAU,CAAC;AACjC,MAAM;EAACC;AAAI,CAAC,GAAGD,OAAO,CAAC,UAAU,CAAC;AAClC,MAAM;EAACE;AAAG,CAAC,GAAGC,IAAI;AAElB,MAAMC,GAAG,GAAG,IAAI;AAChB,MAAMC,QAAQ,GAAG,EAAE;AAEnBN,KAAK,CAACO,SAAS,CAACC,SAAS,GAAG,UAASC,GAAG,EAAE;EACtC,IAAIA,GAAG,KAAKC,SAAS,IAAIR,IAAI,CAACO,GAAG,CAAC,KAAK,QAAQ,EAAE;IAC7C,IAAIA,GAAG,KAAK,CAAC,EAAE;MACX;MACA,OAAO,IAAIT,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;IACjD;IACA,IAAIF,GAAG,KAAK,CAAC,EAAE;MACX;MACA,OAAO,IAAIT,KAAK,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,IAAI,CAACW,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;IACvD;IACA;IACA,IAAIC,OAAO,GAAG,IAAI,CAACJ,SAAS,EAAE;IAC9B,IAAIK,IAAI,GAAG,KAAK;IAChB,IAAIC,QAAQ,GAAGR,QAAQ;IAEvB,MAAMS,IAAI,GAAGA,CAACC,GAAG,EAAEC,IAAI,KAAK;MACxB,MAAMC,GAAG,GAAGF,GAAG,CAACG,WAAW,CAACF,IAAI,EAAE,GAAG,EAAEJ,IAAI,CAAC;MAC5C,MAAMO,EAAE,GAAGF,GAAG,CAACV,SAAS,EAAE;MAC1B,IAAIJ,IAAI,CAACiB,GAAG,CAACZ,GAAG,GAAGW,EAAE,CAAC,GAAGf,GAAG,IAAI,CAACS,QAAQ,EAAE,EAAE;QACzC;QACA,OAAOI,GAAG;MACd;MACA,OAAOE,EAAE,GAAGX,GAAG,GAAGM,IAAI,CAACC,GAAG,EAAEE,GAAG,CAAC,GAAGH,IAAI,CAACG,GAAG,EAAED,IAAI,CAAC;IACtD,CAAC;IAED,MAAMK,GAAG,GAAG,CAACV,OAAO,GAAGH,GAAG,GAAGM,IAAI,CAAC,IAAIf,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAGe,IAAI,CAAC,IAAI,EAAE,IAAIf,KAAK,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC,CAAC,CAAC,EAAEsB,GAAG,EAAE;IACzG,OAAO,IAAItB,KAAK,CAAC,CAAC,GAAGsB,GAAG,EAAC,IAAI,CAACX,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EAC3C;EACA,OAAOY,aAAa,CAAC,GAAI,IAAI,CAACZ,IAAI,CAAEa,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;AACnD,CAAC;AAGD,MAAMD,aAAa,GAAGA,CAACE,CAAC,EAACC,CAAC,EAACC,CAAC,KAAK;EAC7B;EACA;EACAF,CAAC,GAAGG,WAAW,CAACH,CAAC,CAAC;EAClBC,CAAC,GAAGE,WAAW,CAACF,CAAC,CAAC;EAClBC,CAAC,GAAGC,WAAW,CAACD,CAAC,CAAC;EAClB,OAAO,MAAM,GAAGF,CAAC,GAAG,MAAM,GAAGC,CAAC,GAAG,MAAM,GAAGC,CAAC;AAC/C,CAAC;AAED,MAAMC,WAAW,GAAIC,CAAC,IAAK;EACvBA,CAAC,IAAI,GAAG;EACR,OAAOA,CAAC,IAAI,OAAO,GAAGA,CAAC,GAAC,KAAK,GAAG1B,GAAG,CAAC,CAAC0B,CAAC,GAAC,KAAK,IAAE,KAAK,EAAE,GAAG,CAAC;AAC7D,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}