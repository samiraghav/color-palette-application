{"ast":null,"code":"/*\n * interpolates between a set of colors uzing a bezier spline\n * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n */\n\nrequire('../io/rgb');\nconst chroma = require('../chroma');\nconst blend = (bottom, top, mode) => {\n  if (!blend[mode]) {\n    throw new Error('unknown blend mode ' + mode);\n  }\n  return blend[mode](bottom, top);\n};\nconst blend_f = f => (bottom, top) => {\n  const c0 = chroma(top).rgb();\n  const c1 = chroma(bottom).rgb();\n  return chroma.rgb(f(c0, c1));\n};\nconst each = f => (c0, c1) => {\n  const out = [];\n  out[0] = f(c0[0], c1[0]);\n  out[1] = f(c0[1], c1[1]);\n  out[2] = f(c0[2], c1[2]);\n  return out;\n};\nconst normal = a => a;\nconst multiply = (a, b) => a * b / 255;\nconst darken = (a, b) => a > b ? b : a;\nconst lighten = (a, b) => a > b ? a : b;\nconst screen = (a, b) => 255 * (1 - (1 - a / 255) * (1 - b / 255));\nconst overlay = (a, b) => b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\nconst burn = (a, b) => 255 * (1 - (1 - b / 255) / (a / 255));\nconst dodge = (a, b) => {\n  if (a === 255) return 255;\n  a = 255 * (b / 255) / (1 - a / 255);\n  return a > 255 ? 255 : a;\n};\n\n// # add = (a,b) ->\n// #     if (a + b > 255) then 255 else a + b\n\nblend.normal = blend_f(each(normal));\nblend.multiply = blend_f(each(multiply));\nblend.screen = blend_f(each(screen));\nblend.overlay = blend_f(each(overlay));\nblend.darken = blend_f(each(darken));\nblend.lighten = blend_f(each(lighten));\nblend.dodge = blend_f(each(dodge));\nblend.burn = blend_f(each(burn));\n// blend.add = blend_f(each(add));\n\nmodule.exports = blend;","map":{"version":3,"names":["require","chroma","blend","bottom","top","mode","Error","blend_f","f","c0","rgb","c1","each","out","normal","a","multiply","b","darken","lighten","screen","overlay","burn","dodge","module","exports"],"sources":["C:/Users/Sai/Desktop/REACT/youtube-extension/node_modules/chroma-js/src/generator/blend.js"],"sourcesContent":["/*\n * interpolates between a set of colors uzing a bezier spline\n * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n */\n\nrequire('../io/rgb');\nconst chroma = require('../chroma');\n\nconst blend = (bottom, top, mode) => {\n    if (!blend[mode]) {\n        throw new Error('unknown blend mode ' + mode);\n    }\n    return blend[mode](bottom, top);\n}\n\nconst blend_f = (f) =>\n    (bottom,top) => {\n        const c0 = chroma(top).rgb();\n        const c1 = chroma(bottom).rgb();\n        return chroma.rgb(f(c0, c1));\n    }\n\nconst each = (f) =>\n    (c0, c1) => {\n        const out = []\n        out[0] = f(c0[0], c1[0]);\n        out[1] = f(c0[1], c1[1]);\n        out[2] = f(c0[2], c1[2]);\n        return out;\n    }\n\nconst normal = (a) => a\nconst multiply = (a,b) => a * b / 255\nconst darken = (a,b) => a > b ? b : a\nconst lighten = (a,b) => a > b ? a : b\nconst screen = (a,b) => 255 * (1 - (1-a/255) * (1-b/255))\nconst overlay = (a,b) => b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 ))\nconst burn = (a,b) => 255 * (1 - (1 - b / 255) / (a/255))\nconst dodge = (a,b) => {\n    if (a === 255) return 255;\n    a = 255 * (b / 255) / (1 - a / 255);\n    return a > 255 ? 255 : a\n}\n\n// # add = (a,b) ->\n// #     if (a + b > 255) then 255 else a + b\n\nblend.normal = blend_f(each(normal));\nblend.multiply = blend_f(each(multiply));\nblend.screen = blend_f(each(screen));\nblend.overlay = blend_f(each(overlay));\nblend.darken = blend_f(each(darken));\nblend.lighten = blend_f(each(lighten));\nblend.dodge = blend_f(each(dodge));\nblend.burn = blend_f(each(burn));\n// blend.add = blend_f(each(add));\n\nmodule.exports = blend;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}