{"ast":null,"code":"const {\n  last,\n  clip_rgb,\n  type\n} = require('./utils');\nconst _input = require('./io/input');\nclass Color {\n  constructor() {\n    const me = this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (type(args[0]) === 'object' && args[0].constructor && args[0].constructor === this.constructor) {\n      // the argument is already a Color instance\n      return args[0];\n    }\n\n    // last argument could be the mode\n    let mode = last(args);\n    let autodetect = false;\n    if (!mode) {\n      autodetect = true;\n      if (!_input.sorted) {\n        _input.autodetect = _input.autodetect.sort((a, b) => b.p - a.p);\n        _input.sorted = true;\n      }\n      // auto-detect format\n      for (let chk of _input.autodetect) {\n        mode = chk.test(...args);\n        if (mode) break;\n      }\n    }\n    if (_input.format[mode]) {\n      const rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0, -1));\n      me._rgb = clip_rgb(rgb);\n    } else {\n      throw new Error('unknown format: ' + args);\n    }\n\n    // add alpha channel\n    if (me._rgb.length === 3) me._rgb.push(1);\n  }\n  toString() {\n    if (type(this.hex) == 'function') return this.hex();\n    return `[${this._rgb.join(',')}]`;\n  }\n}\nmodule.exports = Color;","map":{"version":3,"names":["last","clip_rgb","type","require","_input","Color","constructor","me","_len","arguments","length","args","Array","_key","mode","autodetect","sorted","sort","a","b","p","chk","test","format","rgb","apply","slice","_rgb","Error","push","toString","hex","join","module","exports"],"sources":["C:/Users/Sai/Desktop/REACT/youtube-extension/node_modules/chroma-js/src/Color.js"],"sourcesContent":["const {last, clip_rgb, type} = require('./utils');\nconst _input = require('./io/input');\n\nclass Color {\n\n    constructor(...args) {\n        const me = this;\n        if (type(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        let mode = last(args);\n        let autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort((a,b) => b.p - a.p);\n                _input.sorted = true;\n            }\n            // auto-detect format\n            for (let chk of _input.autodetect) {\n                mode = chk.test(...args);\n                if (mode) break;\n            }\n        }\n\n        if (_input.format[mode]) {\n            const rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) me._rgb.push(1);\n    }\n\n    toString() {\n        if (type(this.hex) == 'function') return this.hex();\n        return `[${this._rgb.join(',')}]`;\n    }\n\n}\n\nmodule.exports = Color;\n"],"mappings":"AAAA,MAAM;EAACA,IAAI;EAAEC,QAAQ;EAAEC;AAAI,CAAC,GAAGC,OAAO,CAAC,SAAS,CAAC;AACjD,MAAMC,MAAM,GAAGD,OAAO,CAAC,YAAY,CAAC;AAEpC,MAAME,KAAK,CAAC;EAERC,WAAWA,CAAA,EAAU;IACjB,MAAMC,EAAE,GAAG,IAAI;IAAC,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADLC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAEf,IAAIX,IAAI,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,IAC1BA,IAAI,CAAC,CAAC,CAAC,CAACL,WAAW,IACnBK,IAAI,CAAC,CAAC,CAAC,CAACL,WAAW,KAAK,IAAI,CAACA,WAAW,EAAE;MAC1C;MACA,OAAOK,IAAI,CAAC,CAAC,CAAC;IAClB;;IAEA;IACA,IAAIG,IAAI,GAAGd,IAAI,CAACW,IAAI,CAAC;IACrB,IAAII,UAAU,GAAG,KAAK;IAEtB,IAAI,CAACD,IAAI,EAAE;MACPC,UAAU,GAAG,IAAI;MACjB,IAAI,CAACX,MAAM,CAACY,MAAM,EAAE;QAChBZ,MAAM,CAACW,UAAU,GAAGX,MAAM,CAACW,UAAU,CAACE,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKA,CAAC,CAACC,CAAC,GAAGF,CAAC,CAACE,CAAC,CAAC;QAC9DhB,MAAM,CAACY,MAAM,GAAG,IAAI;MACxB;MACA;MACA,KAAK,IAAIK,GAAG,IAAIjB,MAAM,CAACW,UAAU,EAAE;QAC/BD,IAAI,GAAGO,GAAG,CAACC,IAAI,CAAC,GAAGX,IAAI,CAAC;QACxB,IAAIG,IAAI,EAAE;MACd;IACJ;IAEA,IAAIV,MAAM,CAACmB,MAAM,CAACT,IAAI,CAAC,EAAE;MACrB,MAAMU,GAAG,GAAGpB,MAAM,CAACmB,MAAM,CAACT,IAAI,CAAC,CAACW,KAAK,CAAC,IAAI,EAAEV,UAAU,GAAGJ,IAAI,GAAGA,IAAI,CAACe,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;MACjFnB,EAAE,CAACoB,IAAI,GAAG1B,QAAQ,CAACuB,GAAG,CAAC;IAC3B,CAAC,MAAM;MACH,MAAM,IAAII,KAAK,CAAC,kBAAkB,GAACjB,IAAI,CAAC;IAC5C;;IAEA;IACA,IAAIJ,EAAE,CAACoB,IAAI,CAACjB,MAAM,KAAK,CAAC,EAAEH,EAAE,CAACoB,IAAI,CAACE,IAAI,CAAC,CAAC,CAAC;EAC7C;EAEAC,QAAQA,CAAA,EAAG;IACP,IAAI5B,IAAI,CAAC,IAAI,CAAC6B,GAAG,CAAC,IAAI,UAAU,EAAE,OAAO,IAAI,CAACA,GAAG,EAAE;IACnD,OAAQ,IAAG,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,GAAG,CAAE,GAAE;EACrC;AAEJ;AAEAC,MAAM,CAACC,OAAO,GAAG7B,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}